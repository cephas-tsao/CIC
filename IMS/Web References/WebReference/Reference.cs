//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace IMS.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PredictOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::IMS.Properties.Settings.Default.IMS_WebReference_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PredictCompletedEventHandler PredictCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("/Predict", RequestNamespace="", ResponseNamespace="", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Predict(
                    string model, 
                    int NumofFeature, 
                    string f1, 
                    string f2, 
                    string f3, 
                    string f4, 
                    string f5, 
                    string f6, 
                    string f7, 
                    string f8, 
                    string f9, 
                    string f10, 
                    string f11, 
                    string f12, 
                    string f13, 
                    string f14, 
                    string f15, 
                    string f16, 
                    string f17, 
                    string f18, 
                    string f19, 
                    string f20) {
            object[] results = this.Invoke("Predict", new object[] {
                        model,
                        NumofFeature,
                        f1,
                        f2,
                        f3,
                        f4,
                        f5,
                        f6,
                        f7,
                        f8,
                        f9,
                        f10,
                        f11,
                        f12,
                        f13,
                        f14,
                        f15,
                        f16,
                        f17,
                        f18,
                        f19,
                        f20});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void PredictAsync(
                    string model, 
                    int NumofFeature, 
                    string f1, 
                    string f2, 
                    string f3, 
                    string f4, 
                    string f5, 
                    string f6, 
                    string f7, 
                    string f8, 
                    string f9, 
                    string f10, 
                    string f11, 
                    string f12, 
                    string f13, 
                    string f14, 
                    string f15, 
                    string f16, 
                    string f17, 
                    string f18, 
                    string f19, 
                    string f20) {
            this.PredictAsync(model, NumofFeature, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, null);
        }
        
        /// <remarks/>
        public void PredictAsync(
                    string model, 
                    int NumofFeature, 
                    string f1, 
                    string f2, 
                    string f3, 
                    string f4, 
                    string f5, 
                    string f6, 
                    string f7, 
                    string f8, 
                    string f9, 
                    string f10, 
                    string f11, 
                    string f12, 
                    string f13, 
                    string f14, 
                    string f15, 
                    string f16, 
                    string f17, 
                    string f18, 
                    string f19, 
                    string f20, 
                    object userState) {
            if ((this.PredictOperationCompleted == null)) {
                this.PredictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPredictOperationCompleted);
            }
            this.InvokeAsync("Predict", new object[] {
                        model,
                        NumofFeature,
                        f1,
                        f2,
                        f3,
                        f4,
                        f5,
                        f6,
                        f7,
                        f8,
                        f9,
                        f10,
                        f11,
                        f12,
                        f13,
                        f14,
                        f15,
                        f16,
                        f17,
                        f18,
                        f19,
                        f20}, this.PredictOperationCompleted, userState);
        }
        
        private void OnPredictOperationCompleted(object arg) {
            if ((this.PredictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PredictCompleted(this, new PredictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PredictCompletedEventHandler(object sender, PredictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PredictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PredictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591